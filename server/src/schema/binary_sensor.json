{
  "binary_sensor": {
    "components": ["sim800l", "gpio", "template", "pn532"],
    "schemas": {
      "MULTI_CLICK_TIMING_SCHEMA": {
        "config_vars": {
          "state": { "key": "Optional", "type": "boolean" },
          "min_length": {
            "key": "Optional",
            "type": "<class 'voluptuous.validators.All'>"
          },
          "max_length": {
            "key": "Optional",
            "type": "<class 'voluptuous.validators.All'>"
          }
        }
      },
      "BINARY_SENSOR_SCHEMA": {
        "config_vars": {
          "id": { "key": "GeneratedID", "type": "<class 'function'>" },
          "mqtt_id": { "key": "Optional", "type": "<class 'function'>" },
          "device_class": {
            "key": "Optional",
            "type": "enum",
            "values": [
              "",
              "battery",
              "battery_charging",
              "cold",
              "connectivity",
              "door",
              "garage_door",
              "gas",
              "heat",
              "light",
              "lock",
              "moisture",
              "motion",
              "moving",
              "occupancy",
              "opening",
              "plug",
              "power",
              "presence",
              "problem",
              "running",
              "safety",
              "smoke",
              "sound",
              "tamper",
              "update",
              "vibration",
              "window"
            ]
          },
          "filters": {
            "key": "Optional",
            "type": "registry",
            "is_list": true,
            "registry": "binary_sensor.filter"
          },
          "on_press": { "key": "Optional", "type": "trigger" },
          "on_release": { "key": "Optional", "type": "trigger" },
          "on_click": {
            "key": "Optional",
            "type": "trigger",
            "schema": {
              "config_vars": {
                "trigger_id": {
                  "key": "GeneratedID",
                  "type": "<class 'function'>"
                },
                "min_length": {
                  "key": "Optional",
                  "default": "50ms",
                  "type": "<class 'voluptuous.validators.All'>"
                },
                "max_length": {
                  "key": "Optional",
                  "default": "350ms",
                  "type": "<class 'voluptuous.validators.All'>"
                },
                "then": { "type": "trigger" }
              }
            }
          },
          "on_double_click": {
            "key": "Optional",
            "type": "trigger",
            "schema": {
              "config_vars": {
                "trigger_id": {
                  "key": "GeneratedID",
                  "type": "<class 'function'>"
                },
                "min_length": {
                  "key": "Optional",
                  "default": "50ms",
                  "type": "<class 'voluptuous.validators.All'>"
                },
                "max_length": {
                  "key": "Optional",
                  "default": "350ms",
                  "type": "<class 'voluptuous.validators.All'>"
                },
                "then": { "type": "trigger" }
              }
            }
          },
          "on_multi_click": {
            "key": "Optional",
            "type": "trigger",
            "schema": {
              "config_vars": {
                "trigger_id": {
                  "key": "GeneratedID",
                  "type": "<class 'function'>"
                },
                "timing": {
                  "key": "Required",
                  "type": "<class 'voluptuous.validators.All'>"
                },
                "invalid_cooldown": {
                  "key": "Optional",
                  "default": "1s",
                  "type": "<class 'voluptuous.validators.All'>"
                },
                "then": { "type": "trigger" }
              }
            },
            "has_required_var": true
          },
          "on_state": { "key": "Optional", "type": "trigger" }
        },
        "extends": ["core.ENTITY_BASE_SCHEMA", "core.MQTT_COMPONENT_SCHEMA"]
      }
    },
    "action": {
      "template.publish": {
        "config_vars": {
          "id": { "key": "Required", "type": "<class 'function'>" },
          "state": { "key": "Required", "type": "<class 'function'>" }
        }
      }
    },
    "condition": {
      "is_on": { "config_vars": {} },
      "is_off": { "config_vars": {} }
    },
    "filter": {
      "invert": { "config_vars": {} },
      "delayed_on_off": {
        "config_vars": {},
        "extends": ["core.positive_time_period_milliseconds"]
      },
      "delayed_on": {
        "config_vars": {},
        "extends": ["core.positive_time_period_milliseconds"]
      },
      "delayed_off": {
        "config_vars": {},
        "extends": ["core.positive_time_period_milliseconds"]
      },
      "autorepeat": { "config_vars": {} },
      "lambda": { "config_vars": {} }
    }
  }
}
