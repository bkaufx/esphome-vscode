{
  "remote_base": {
    "schemas": {
      "BASE_REMOTE_TRANSMITTER_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "transmitter_id": {
              "key": "GeneratedID",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The remote transmitter to send the remote code with. Defaults to the first one defined in the configuration.\n\n*See also: [Remote Transmitter Actions](https://esphome.io/components/remote_transmitter.html#remote-transmitter-actions)*"
            },
            "repeat": {
              "key": "Optional",
              "docs": "Optionally set the code to be repeated a number of times. Defaults to sending the code only once.\n  * **times** (int): The number of times to repeat the code.\n  \n  * **wait_time** ([Time](https://esphome.io/guides/configuration-types.html#config-time)): The time to wait between repeats.\n  \n  \n\n*See also: [Remote Transmitter Actions](https://esphome.io/components/remote_transmitter.html#remote-transmitter-actions)*"
            }
          }
        }
      },
      "COOLIX_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "data": {
              "key": "Required",
              "data_type": "hex_uint32_t",
              "docs": "**int**: The 24-bit Coolix code to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "DISH_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "address": {
              "key": "Optional",
              "default": "1",
              "type": "integer",
              "docs": "**int**: The number of the receiver to target, between 1 and 16 inclusive. Defaults to `1`.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "command": {
              "key": "Required",
              "type": "integer",
              "docs": "**int**: The Dish command to listen for, between 0 and 63 inclusive.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "JVC_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "data": {
              "key": "Required",
              "data_type": "hex_uint32_t",
              "docs": "**int**: The JVC code to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "LG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "data": {
              "key": "Required",
              "data_type": "hex_uint32_t",
              "docs": "**int**: The LG code to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "nbits": {
              "key": "Optional",
              "default": "28",
              "type": "enum",
              "values": [
                28,
                32
              ],
              "docs": "**int**: The number of bits of the remote code. Defaults to `28`.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "MAGIQUEST_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "wand_id": {
              "key": "Required",
              "data_type": "hex_uint32_t",
              "docs": "**int**: The MagiQuest wand ID to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "magnitude": {
              "key": "Optional",
              "default": "65535",
              "data_type": "hex_uint16_t",
              "docs": "**int**: The magnitude of swishes and swirls of the wand.  If omitted, will match on any activation of the wand.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "NEC_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "address": {
              "key": "Required",
              "data_type": "hex_uint16_t",
              "docs": "**int**: The address to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "command": {
              "key": "Required",
              "data_type": "hex_uint16_t",
              "docs": "**int**: The NEC command to listen for.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "PIONEER_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "rc_code_1": {
              "key": "Required",
              "data_type": "hex_uint16_t",
              "docs": "**int**: The remote control code to trigger on, see dumper output for more details.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "rc_code_2": {
              "key": "Optional",
              "default": "0",
              "data_type": "hex_uint16_t"
            }
          }
        }
      },
      "PRONTO_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "data": {
              "key": "Required",
              "type": "string",
              "docs": "**string**: The code to listen for, see [remote_transmitter.transmit_raw Action](https://esphome.io/components/remote_transmitter.html#remote-transmitter-transmit-raw) for more info. Usually you only need to copy this directly from the dumper output.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "SONY_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "data": {
              "key": "Required",
              "data_type": "hex_uint32_t",
              "docs": "**int**: The Sony code to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "nbits": {
              "key": "Optional",
              "default": "12",
              "type": "enum",
              "values": [
                12,
                15,
                20
              ],
              "docs": "**int**: The number of bits of the remote code. Defaults to `12`.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "RAW_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "code": {
              "key": "Required",
              "docs": "**list**: The code to listen for, see [remote_transmitter.transmit_raw Action](https://esphome.io/components/remote_transmitter.html#remote-transmitter-transmit-raw) for more info. Usually you only need to copy this directly from the dumper output.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "code_storage_id": {
              "key": "GeneratedID"
            }
          }
        }
      },
      "RC5_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "address": {
              "key": "Required",
              "docs": "**int**: The address to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "command": {
              "key": "Required",
              "docs": "**int**: The RC5 command to listen for.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "RC_SWITCH_RAW_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "code": {
              "key": "Required",
              "docs": "**string**: The remote code to listen for, copy this from the dumper output. To ignore a bit in the received data, use `x` at that place in the **code**.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "protocol": {
              "key": "Optional",
              "default": "1",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "pulse_length": {
                    "key": "Required",
                    "type": "integer",
                    "data_type": "uint32_t"
                  },
                  "sync": {
                    "key": "Optional",
                    "default": "[1, 31]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "zero": {
                    "key": "Optional",
                    "default": "[1, 3]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "one": {
                    "key": "Optional",
                    "default": "[3, 1]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "inverted": {
                    "key": "Optional",
                    "default": "False",
                    "type": "boolean"
                  }
                }
              },
              "docs": "The RC Switch protocol to use, see [RC Switch Protocol](https://esphome.io/components/remote_transmitter.html#remote-transmitter-rc-switch-protocol) for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "RC_SWITCH_TYPE_A_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "group": {
              "key": "Required",
              "docs": "**string**: The group, binary string.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "device": {
              "key": "Required",
              "docs": "**string**: The device in the group, binary string.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "state": {
              "key": "Required",
              "type": "boolean",
              "docs": "**boolean**: The on/off state to trigger on.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "protocol": {
              "key": "Optional",
              "default": "1",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "pulse_length": {
                    "key": "Required",
                    "type": "integer",
                    "data_type": "uint32_t"
                  },
                  "sync": {
                    "key": "Optional",
                    "default": "[1, 31]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "zero": {
                    "key": "Optional",
                    "default": "[1, 3]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "one": {
                    "key": "Optional",
                    "default": "[3, 1]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "inverted": {
                    "key": "Optional",
                    "default": "False",
                    "type": "boolean"
                  }
                }
              },
              "docs": "The RC Switch protocol to use, see [RC Switch Protocol](https://esphome.io/components/remote_transmitter.html#remote-transmitter-rc-switch-protocol) for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "RC_SWITCH_TYPE_B_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "address": {
              "key": "Required",
              "type": "integer",
              "docs": "**int**: The address, int from 1 to 4.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "channel": {
              "key": "Required",
              "type": "integer",
              "docs": "**int**: The channel, int from 1 to 4.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "state": {
              "key": "Required",
              "type": "boolean",
              "docs": "**boolean**: The on/off state to trigger on.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "protocol": {
              "key": "Optional",
              "default": "1",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "pulse_length": {
                    "key": "Required",
                    "type": "integer",
                    "data_type": "uint32_t"
                  },
                  "sync": {
                    "key": "Optional",
                    "default": "[1, 31]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "zero": {
                    "key": "Optional",
                    "default": "[1, 3]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "one": {
                    "key": "Optional",
                    "default": "[3, 1]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "inverted": {
                    "key": "Optional",
                    "default": "False",
                    "type": "boolean"
                  }
                }
              },
              "docs": "The RC Switch protocol to use, see [RC Switch Protocol](https://esphome.io/components/remote_transmitter.html#remote-transmitter-rc-switch-protocol) for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "RC_SWITCH_TYPE_C_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "family": {
              "key": "Required",
              "type": "enum",
              "values": [
                "a",
                "b",
                "c",
                "d",
                "e",
                "f",
                "g",
                "h",
                "i",
                "j",
                "k",
                "l",
                "m",
                "n",
                "o",
                "p"
              ],
              "docs": "**string**: The family. Range is `a` to `p`.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "group": {
              "key": "Required",
              "type": "integer",
              "docs": "**int**: The group. Range is 1 to 4.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "device": {
              "key": "Required",
              "type": "integer",
              "docs": "**int**: The device. Range is 1 to 4.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "state": {
              "key": "Required",
              "type": "boolean",
              "docs": "**boolean**: The on/off state to trigger on.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "protocol": {
              "key": "Optional",
              "default": "1",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "pulse_length": {
                    "key": "Required",
                    "type": "integer",
                    "data_type": "uint32_t"
                  },
                  "sync": {
                    "key": "Optional",
                    "default": "[1, 31]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "zero": {
                    "key": "Optional",
                    "default": "[1, 3]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "one": {
                    "key": "Optional",
                    "default": "[3, 1]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "inverted": {
                    "key": "Optional",
                    "default": "False",
                    "type": "boolean"
                  }
                }
              },
              "docs": "The RC Switch protocol to use, see [RC Switch Protocol](https://esphome.io/components/remote_transmitter.html#remote-transmitter-rc-switch-protocol) for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "RC_SWITCH_TYPE_D_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "group": {
              "key": "Required",
              "type": "enum",
              "values": [
                "a",
                "b",
                "c",
                "d"
              ],
              "docs": "**int**: The group. Range is 1 to 4.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "device": {
              "key": "Required",
              "type": "integer",
              "docs": "**int**: The device. Range is 1 to 3.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "state": {
              "key": "Required",
              "type": "boolean",
              "docs": "**boolean**: The on/off state to trigger on.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "protocol": {
              "key": "Optional",
              "default": "1",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "pulse_length": {
                    "key": "Required",
                    "type": "integer",
                    "data_type": "uint32_t"
                  },
                  "sync": {
                    "key": "Optional",
                    "default": "[1, 31]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "zero": {
                    "key": "Optional",
                    "default": "[1, 3]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "one": {
                    "key": "Optional",
                    "default": "[3, 1]",
                    "data_type": "RC_SWITCH_TIMING_SCHEMA"
                  },
                  "inverted": {
                    "key": "Optional",
                    "default": "False",
                    "type": "boolean"
                  }
                }
              },
              "docs": "The RC Switch protocol to use, see [RC Switch Protocol](https://esphome.io/components/remote_transmitter.html#remote-transmitter-rc-switch-protocol) for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "RC_SWITCH_TRANSMITTER": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "repeat": {
              "key": "Optional",
              "default": "{'times': 5}",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "times": {
                    "key": "Required",
                    "templatable": true,
                    "type": "integer",
                    "data_type": "positive_int"
                  },
                  "wait_time": {
                    "key": "Optional",
                    "default": "0us",
                    "templatable": true,
                    "type": "schema",
                    "schema": {
                      "extends": [
                        "core.positive_time_period_microseconds"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SAMSUNG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "data": {
              "key": "Required",
              "data_type": "hex_uint64_t",
              "docs": "**int**: The data to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "nbits": {
              "key": "Optional",
              "default": "32",
              "type": "integer",
              "docs": "**int**: The number of bits of the remote code. Defaults to `32`.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "SAMSUNG36_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "address": {
              "key": "Required",
              "data_type": "hex_uint16_t",
              "docs": "**int**: The address to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "command": {
              "key": "Required",
              "data_type": "hex_uint32_t",
              "docs": "**int**: The command.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "TOSHIBAAC_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "rc_code_1": {
              "key": "Required",
              "data_type": "hex_uint64_t",
              "docs": "**int**: The remote control code to trigger on, see dumper output for more details.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "rc_code_2": {
              "key": "Optional",
              "default": "0",
              "data_type": "hex_uint64_t",
              "docs": "**int**: The second part of the remote control code to trigger on, see dumper output for more details.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "PANASONIC_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "address": {
              "key": "Required",
              "data_type": "hex_uint16_t",
              "docs": "**int**: The address to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "command": {
              "key": "Required",
              "data_type": "hex_uint32_t",
              "docs": "**int**: The command.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "NEXA_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "device": {
              "key": "Required",
              "data_type": "hex_uint32_t",
              "docs": "**int**: The Nexa device code to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "group": {
              "key": "Required",
              "data_type": "hex_uint8_t",
              "docs": "**int**: The Nexa group code to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "state": {
              "key": "Required",
              "data_type": "hex_uint8_t",
              "docs": "**int**: The Nexa state code to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "channel": {
              "key": "Required",
              "data_type": "hex_uint8_t",
              "docs": "**int**: The Nexa channel code to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            },
            "level": {
              "key": "Required",
              "data_type": "hex_uint8_t",
              "docs": "**int**: The Nexa level code to trigger on, see dumper output for more info.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      },
      "MIDEA_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "code": {
              "key": "Required",
              "docs": "**5-bytes list**: The code to listen for, see [remote_transmitter.transmit_midea Action](https://esphome.io/components/remote_transmitter.html#remote-transmitter-transmit-midea) for more info. Usually you only need to copy first 5 bytes directly from the dumper output.\n\n*See also: [remote_receiver Binary Sensor](https://esphome.io/components/remote_receiver.html#id1)*"
            }
          }
        }
      }
    },
    "binary": {
      "coolix": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.COOLIX_SCHEMA"
          ]
        }
      },
      "dish": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.DISH_SCHEMA"
          ]
        }
      },
      "jvc": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.JVC_SCHEMA"
          ]
        }
      },
      "lg": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.LG_SCHEMA"
          ]
        }
      },
      "magiquest": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.MAGIQUEST_SCHEMA"
          ]
        }
      },
      "nec": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.NEC_SCHEMA"
          ]
        }
      },
      "pioneer": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.PIONEER_SCHEMA"
          ]
        }
      },
      "pronto": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.PRONTO_SCHEMA"
          ]
        }
      },
      "sony": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.SONY_SCHEMA"
          ]
        }
      },
      "raw": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.RAW_SCHEMA"
          ]
        }
      },
      "rc5": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.RC5_SCHEMA"
          ]
        }
      },
      "rc_switch_raw": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.RC_SWITCH_RAW_SCHEMA"
          ]
        }
      },
      "rc_switch_type_a": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.RC_SWITCH_TYPE_A_SCHEMA"
          ]
        }
      },
      "rc_switch_type_b": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.RC_SWITCH_TYPE_B_SCHEMA"
          ]
        }
      },
      "rc_switch_type_c": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.RC_SWITCH_TYPE_C_SCHEMA"
          ]
        }
      },
      "rc_switch_type_d": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.RC_SWITCH_TYPE_D_SCHEMA",
            "remote_base.RC_SWITCH_TRANSMITTER"
          ]
        }
      },
      "samsung": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.SAMSUNG_SCHEMA"
          ]
        }
      },
      "samsung36": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.SAMSUNG36_SCHEMA"
          ]
        }
      },
      "toshiba_ac": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.TOSHIBAAC_SCHEMA"
          ]
        }
      },
      "panasonic": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.PANASONIC_SCHEMA"
          ]
        }
      },
      "nexa": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.NEXA_SCHEMA"
          ]
        }
      },
      "midea": {
        "type": "schema",
        "schema": {
          "extends": [
            "remote_base.MIDEA_SCHEMA"
          ]
        }
      }
    },
    "dumper": {
      "coolix": {},
      "dish": {},
      "jvc": {},
      "lg": {},
      "magiquest": {},
      "nec": {},
      "pioneer": {},
      "pronto": {},
      "sony": {},
      "raw": {},
      "rc5": {},
      "rc_switch": {},
      "samsung": {},
      "samsung36": {},
      "toshiba_ac": {},
      "panasonic": {},
      "nexa": {},
      "midea": {}
    }
  }
}