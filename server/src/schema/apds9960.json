{
  "apds9960": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`.\n\n*See also: [apds9960 Component/Hub](https://esphome.io/components/sensor/apds9960.html#configuration-variables)*"
            },
            "i2c_id": {
              "key": "GeneratedID"
            },
            "address": {
              "key": "Optional",
              "default": "57",
              "data_type": "hex_uint8_t",
              "docs": "**int**: The I\u00b2C address of the sensor. Defaults to `0x39`.\n\n*See also: [apds9960 Component/Hub](https://esphome.io/components/sensor/apds9960.html#configuration-variables)*"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        },
        "is_list": true
      }
    }
  },
  "apds9960.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "sensor.SENSOR_SCHEMA"
          ],
          "config_vars": {
            "unit_of_measurement": {
              "default": "%"
            },
            "icon": {
              "default": "mdi:lightbulb"
            },
            "accuracy_decimals": {
              "default": "1"
            },
            "state_class": {
              "default": "measurement"
            },
            "type": {
              "key": "Required",
              "type": "enum",
              "values": [
                "CLEAR",
                "RED",
                "GREEN",
                "BLUE",
                "PROXIMITY"
              ],
              "docs": "**string**: The type of sensor measurement. One of\n  * `CLEAR`\n  \n  * `RED`\n  \n  * `GREEN`\n  \n  * `BLUE`\n  \n  * `PROXIMITY`\n  \n  \n\n*See also: [apds9960 Sensor](https://esphome.io/components/sensor/apds9960.html#sensor)*"
            },
            "apds9960_id": {
              "key": "GeneratedID"
            }
          }
        }
      }
    }
  },
  "apds9960.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA"
          ],
          "config_vars": {
            "device_class": {
              "default": "moving"
            },
            "apds9960_id": {
              "key": "GeneratedID"
            },
            "direction": {
              "key": "Required",
              "type": "enum",
              "values": [
                "UP",
                "DOWN",
                "LEFT",
                "RIGHT"
              ],
              "docs": "**string**: The direction to measure. One of:\n  * `UP`\n  \n  * `DOWN`\n  \n  * `LEFT`\n  \n  * `RIGHT`\n  \n  \n\n*See also: [apds9960 Binary Sensor](https://esphome.io/components/sensor/apds9960.html#binary-sensor)*"
            }
          }
        }
      }
    }
  }
}