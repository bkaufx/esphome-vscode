{
  "scd4x.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID"
            },
            "co2": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "ppm",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:molecule-co2"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "carbon_dioxide",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the CO\u2082 sensor.\n  * **name** (**Required**, string): The name for the CO\u2082eq sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [SCD4X CO\u2082, Temperature and Relative Humidity Sensor](https://esphome.io/components/sensor/scd4x.html#configuration-variables)*"
            },
            "temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "\u00b0C",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:thermometer"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "2",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "temperature",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the Temperature sensor.\n  * **name** (**Required**, string): The name for the temperature sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [SCD4X CO\u2082, Temperature and Relative Humidity Sensor](https://esphome.io/components/sensor/scd4x.html#configuration-variables)*"
            },
            "humidity": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "%",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:water-percent"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "2",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "humidity",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the Humidity sensor.\n  * **name** (**Required**, string): The name for the humidity sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [SCD4X CO\u2082, Temperature and Relative Humidity Sensor](https://esphome.io/components/sensor/scd4x.html#configuration-variables)*"
            },
            "automatic_self_calibration": {
              "key": "Optional",
              "default": "True",
              "type": "boolean",
              "docs": "**boolean**: Whether to enable automatic self calibration (ASC). Defaults to `true`.\n\n\n\n*See also: [SCD4X CO\u2082, Temperature and Relative Humidity Sensor](https://esphome.io/components/sensor/scd4x.html#configuration-variables)*"
            },
            "altitude_compensation": {
              "key": "Optional",
              "default": "0m",
              "type": "integer",
              "docs": "**int**: Enable compensating deviations due to current altitude (in metres). Notice: setting *altitude_compensation* is ignored if *ambient_pressure_compensation* is set.\n\n\n\n*See also: [SCD4X CO\u2082, Temperature and Relative Humidity Sensor](https://esphome.io/components/sensor/scd4x.html#configuration-variables)*"
            },
            "ambient_pressure_compensation": {
              "key": "Optional",
              "docs": "**int**: Enable compensation of measured CO\u2082 values based on given ambient pressure in mBar.\n\n\n\n*See also: [SCD4X CO\u2082, Temperature and Relative Humidity Sensor](https://esphome.io/components/sensor/scd4x.html#configuration-variables)*"
            },
            "temperature_offset": {
              "key": "Optional",
              "default": "4\u00b0C",
              "docs": "**float**: The temperature offset can depend on various factors such as the SCD4x measurement mode, self-heating of close components, the ambient temperature and air flow. This variable allows the compensation of those effects by setting a temperature offset. Defaults to `4\u00b0C`.\n\n\n\n*See also: [SCD4X CO\u2082, Temperature and Relative Humidity Sensor](https://esphome.io/components/sensor/scd4x.html#configuration-variables)*"
            },
            "ambient_pressure_compensation_source": {
              "key": "Optional"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`.\n\n\n\n*See also: [SCD4X CO\u2082, Temperature and Relative Humidity Sensor](https://esphome.io/components/sensor/scd4x.html#configuration-variables)*"
            },
            "i2c_id": {
              "key": "GeneratedID"
            },
            "address": {
              "key": "Optional",
              "default": "98",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.hex_uint8_t"
                ]
              },
              "docs": "**int**: Manually specify the I\u00b2C address of the sensor. Defaults to `0x62`.\n\n\n\n*See also: [SCD4X CO\u2082, Temperature and Relative Humidity Sensor](https://esphome.io/components/sensor/scd4x.html#configuration-variables)*"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      }
    }
  }
}