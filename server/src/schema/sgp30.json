{
  "sgp30.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID"
            },
            "eco2": {
              "key": "Required",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "ppm",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:molecule-co2"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "carbon_dioxide",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the CO\u2082eq. sensor.\n  * **name** (**Required**, string): The name for the CO\u2082eq sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
            },
            "tvoc": {
              "key": "Required",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "ppb",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:radiator"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "volatile_organic_compounds",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the total Volatile Organic Compounds sensor.\n  * **name** (**Required**, string): The name for the humidity sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
            },
            "eco2_baseline": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:molecule-co2"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  }
                }
              },
              "docs": "The information for the CO\u2082eq. sensor baseline value. Baseline value is published in decimals.\n  * **name** (**Required**, string): The name for the CO\u2082eq baseline value sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
            },
            "tvoc_baseline": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:radiator"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  }
                }
              },
              "docs": "The information for the TVOC baseline value sensor. Baseline value is published in in decimals.\n  * **name** (**Required**, string): The name for the TVOC baseline value sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
            },
            "store_baseline": {
              "key": "Optional",
              "default": "True",
              "type": "boolean",
              "docs": "**boolean**: Store the sensor baselines persistently when calculated or updated. Defaults to yes.\n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
            },
            "baseline": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "eco2_baseline": {
                    "key": "Required",
                    "type": "schema",
                    "schema": {
                      "extends": [
                        "core.hex_uint16_t"
                      ]
                    },
                    "docs": "**int**: The eCO2 baseline for calibration purposes. After OTA, this value is used to calibrate the sensor.\n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
                  },
                  "tvoc_baseline": {
                    "key": "Required",
                    "type": "schema",
                    "schema": {
                      "extends": [
                        "core.hex_uint16_t"
                      ]
                    },
                    "docs": "**int**: The TVOC baseline for calibration purposes. After OTA, this value is used to calibrate the sensor.\n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
                  }
                }
              },
              "docs": "The block containing baselines for calibration purposes. See [Calibrating Baseline](https://esphome.io/components/sensor/sgp30.html#sgp30-calibrating) for more info.\n  * **eco2_baseline** (**Required**, int): The eCO2 baseline for calibration purposes. After OTA, this value is used to calibrate the sensor.\n  \n  * **tvoc_baseline** (**Required**, int): The TVOC baseline for calibration purposes. After OTA, this value is used to calibrate the sensor.\n  \n  \n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
            },
            "compensation": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "humidity_source": {
                    "key": "Required",
                    "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Give an external humidity sensor ID here. This can improve the sensor\u2019s internal calculations.\n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
                  },
                  "temperature_source": {
                    "key": "Required",
                    "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Give an external temperature sensor ID here. This can improve the sensor\u2019s internal calculations.\n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
                  }
                }
              },
              "docs": "The block containing sensors used for compensation.\n  * **temperature_source** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Give an external temperature sensor ID here. This can improve the sensor\u2019s internal calculations.\n  \n  * **humidity_source** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Give an external humidity sensor ID here. This can improve the sensor\u2019s internal calculations.\n  \n  \n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
            },
            "update_interval": {
              "key": "Optional",
              "default": "1s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `1s`.\n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
            },
            "i2c_id": {
              "key": "GeneratedID"
            },
            "address": {
              "key": "Optional",
              "default": "88",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.hex_uint8_t"
                ]
              },
              "docs": "**int**: Manually specify the I\u00b2C address of the sensor. Defaults to `0x58`.\n\n\n\n*See also: [SGP30 CO\u2082 and Volatile Organic Compound Sensor](https://esphome.io/components/sensor/sgp30.html#configuration-variables)*"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      }
    }
  }
}