{
  "tcs34725.sensor": {
    "schemas": {
      "color_channel_schema": {
        "type": "schema",
        "schema": {
          "extends": [
            "sensor.SENSOR_SCHEMA"
          ],
          "config_vars": {
            "unit_of_measurement": {
              "default": "%"
            },
            "icon": {
              "default": "mdi:lightbulb"
            },
            "accuracy_decimals": {
              "default": "1"
            },
            "state_class": {
              "default": "measurement"
            }
          }
        }
      },
      "color_temperature_schema": {
        "type": "schema",
        "schema": {
          "extends": [
            "sensor.SENSOR_SCHEMA"
          ],
          "config_vars": {
            "unit_of_measurement": {
              "default": "K"
            },
            "icon": {
              "default": "mdi:thermometer"
            },
            "accuracy_decimals": {
              "default": "1"
            },
            "state_class": {
              "default": "measurement"
            }
          }
        }
      },
      "illuminance_schema": {
        "type": "schema",
        "schema": {
          "extends": [
            "sensor.SENSOR_SCHEMA"
          ],
          "config_vars": {
            "unit_of_measurement": {
              "default": "lx"
            },
            "accuracy_decimals": {
              "default": "1"
            },
            "device_class": {
              "default": "illuminance"
            },
            "state_class": {
              "default": "measurement"
            }
          }
        }
      },
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID"
            },
            "red_channel": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "tcs34725.sensor.color_channel_schema"
                ]
              },
              "docs": "Value of the red color channel relative to the clear channel, as a percentage. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "green_channel": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "tcs34725.sensor.color_channel_schema"
                ]
              },
              "docs": "Value of the green color channel relative to the clear channel, as a percentage. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "blue_channel": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "tcs34725.sensor.color_channel_schema"
                ]
              },
              "docs": "Value of the blue color channel relative to the clear channel, as a percentage. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "clear_channel": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "tcs34725.sensor.color_channel_schema"
                ]
              },
              "docs": "Value of the clear (without a color filter) channel, relative to the maximum value for the chosen integration time. All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "illuminance": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "tcs34725.sensor.illuminance_schema"
                ]
              },
              "docs": "Get the total illuminance of the sensor in lx.\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "color_temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "tcs34725.sensor.color_temperature_schema"
                ]
              },
              "docs": "Get the calculated color temperature of the light in Kelvin.\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "integration_time": {
              "key": "Optional",
              "default": "2.4ms",
              "type": "enum",
              "values": [
                "2.4ms",
                "24ms",
                "50ms",
                "101ms",
                "120ms",
                "154ms",
                "180ms",
                "199ms",
                "240ms",
                "300ms",
                "360ms",
                "401ms",
                "420ms",
                "480ms",
                "499ms",
                "540ms",
                "600ms",
                "614ms"
              ],
              "docs": "The amount of time the light sensor is exposed. Valid values are `2.4ms` (default), `24ms`, `50ms`, `101ms`, `120ms`, `154ms`, `180ms`, `199ms`, `240ms`, `300ms`, `360ms`, `401ms`, `420ms`, `480ms`, `499ms`, `540ms`, `600ms`, `614ms`.\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "gain": {
              "key": "Optional",
              "default": "1X",
              "type": "enum",
              "values": [
                "1X",
                "4X",
                "16X",
                "60X"
              ],
              "docs": "Set the gain for the internal ADCs to work better in certain low-light conditions. Valid values are `1x` (default), `4x`, `16x`, `60x` (highest gain).\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "glass_attenuation_factor": {
              "key": "Optional",
              "default": "1.0",
              "docs": "The attenuation factor of glass if it\u2019s behind some glass facia. Default is `1.0` means `100%` transmissivity. `2` means `50%` transmissivity etc.\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`.\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            },
            "i2c_id": {
              "key": "GeneratedID"
            },
            "address": {
              "key": "Optional",
              "default": "41",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.hex_uint8_t"
                ]
              },
              "docs": "**int**: Manually specify the I\u00b2C address of the sensor. Defaults to `0x29`.\n\n\n\n*See also: [TCS34725 RGB Color Sensor](https://esphome.io/components/sensor/tcs34725.html#configuration-variables)*"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      }
    }
  }
}