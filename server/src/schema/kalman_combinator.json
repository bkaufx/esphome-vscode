{
  "kalman_combinator.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "sensor.SENSOR_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {},
            "process_std_dev": {
              "key": "Required",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_float"
                ]
              },
              "docs": "**float**: The standard deviation of the measurement\u2019s change per second (e.g. `1/3600 = 0.000277` if the temperature usually changes at most by one Kelvin per hour). A low value here will place high importance on the current state and be slow to respond to changes in the measured samples. A high value will update faster, but also be more noisy.\n\n\n\n*See also: [Kalman filter-based sensor fusion](https://esphome.io/components/sensor/kalman_combinator.html#configuration-variables)*"
            },
            "sources": {
              "key": "Required",
              "is_list": true,
              "type": "schema",
              "schema": {
                "config_vars": {
                  "source": {
                    "key": "Required",
                    "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id) of a [Sensor Component](https://esphome.io/components/sensor/index.html)**: The sensor that is used as sample source\n\n\n\n*See also: [Kalman filter-based sensor fusion](https://esphome.io/components/sensor/kalman_combinator.html#configuration-variables)*"
                  },
                  "error": {
                    "key": "Required",
                    "templatable": true,
                    "type": "schema",
                    "schema": {
                      "extends": [
                        "core.positive_float"
                      ]
                    },
                    "docs": "**float, [templatable](https://esphome.io/guides/automations.html#config-templatable)**: The standard deviation of the sensor\u2019s measurements. If implemented as a template, the measurement is in parameter `x`.\n\n\n\n*See also: [Kalman filter-based sensor fusion](https://esphome.io/components/sensor/kalman_combinator.html#configuration-variables)*"
                  }
                }
              },
              "docs": "**list**: A list of sensors to use as source. Each source must have either **error** or **error_function** set. These work like the **process_std_dev** parameter, with low values marking accurate data.\n  * **source** (**Required**, [ID](https://esphome.io/guides/configuration-types.html#config-id) of a [Sensor Component](https://esphome.io/components/sensor/index.html)): The sensor that is used as sample source\n  \n  * **error** (**Required**, float, [templatable](https://esphome.io/guides/automations.html#config-templatable)): The standard deviation of the sensor\u2019s measurements. If implemented as a template, the measurement is in parameter `x`.\n  \n  \n\n\n\n*See also: [Kalman filter-based sensor fusion](https://esphome.io/components/sensor/kalman_combinator.html#configuration-variables)*"
            },
            "std_dev": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.ENTITY_BASE_SCHEMA",
                  "core.MQTT_COMPONENT_SCHEMA"
                ],
                "config_vars": {
                  "mqtt_id": {
                    "key": "Optional"
                  },
                  "id": {
                    "key": "GeneratedID"
                  },
                  "unit_of_measurement": {
                    "key": "Optional",
                    "type": "string"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  },
                  "force_update": {
                    "key": "Optional",
                    "default": "False",
                    "type": "boolean"
                  },
                  "expire_after": {
                    "key": "Optional",
                    "type": "schema",
                    "schema": {
                      "extends": [
                        "core.time_period_dict"
                      ]
                    }
                  },
                  "filters": {
                    "key": "Optional",
                    "type": "registry",
                    "is_list": true,
                    "registry": "sensor.filter"
                  },
                  "on_value": {
                    "key": "Optional",
                    "type": "trigger"
                  },
                  "on_raw_value": {
                    "key": "Optional",
                    "type": "trigger"
                  },
                  "on_value_range": {
                    "key": "Optional",
                    "type": "trigger",
                    "schema": {
                      "config_vars": {
                        "above": {
                          "key": "Optional"
                        },
                        "below": {
                          "key": "Optional"
                        },
                        "then": {
                          "type": "trigger"
                        }
                      }
                    },
                    "has_required_var": true
                  }
                }
              },
              "docs": "**[Sensor](https://esphome.io/components/sensor/index.html#config-sensor)**: A sensor that publishes the current standard deviation of the state with each update.\n\n\n\n*See also: [Kalman filter-based sensor fusion](https://esphome.io/components/sensor/kalman_combinator.html#configuration-variables)*"
            }
          }
        }
      },
      "FINAL_VALIDATE_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "kalman_combinator.sensor.CONFIG_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "key": "Required"
            }
          }
        }
      }
    }
  }
}