{
  "midea.climate": {
    "schemas": {
      "MIDEA_ACTION_BASE_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID"
            }
          }
        }
      },
      "validate_modes": {
        "type": "enum",
        "values": [
          "HEAT_COOL",
          "COOL",
          "HEAT",
          "DRY",
          "FAN_ONLY"
        ]
      },
      "validate_presets": {
        "type": "enum",
        "values": [
          "ECO",
          "BOOST",
          "SLEEP"
        ]
      },
      "validate_swing_modes": {
        "type": "enum",
        "values": [
          "BOTH",
          "VERTICAL",
          "HORIZONTAL"
        ]
      },
      "validate_custom_fan_modes": {
        "type": "enum",
        "values": [
          "SILENT",
          "TURBO"
        ]
      },
      "validate_custom_presets": {
        "type": "enum",
        "values": [
          "FREEZE_PROTECTION"
        ]
      },
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "climate.CLIMATE_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "period": {
              "key": "Optional",
              "default": "1s",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "days": {
                    "key": "Optional"
                  },
                  "hours": {
                    "key": "Optional"
                  },
                  "minutes": {
                    "key": "Optional"
                  },
                  "seconds": {
                    "key": "Optional"
                  },
                  "milliseconds": {
                    "key": "Optional"
                  },
                  "microseconds": {
                    "key": "Optional"
                  }
                }
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: Minimal period between requests to the appliance. Defaults to `1s`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "timeout": {
              "key": "Optional",
              "default": "2s",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "days": {
                    "key": "Optional"
                  },
                  "hours": {
                    "key": "Optional"
                  },
                  "minutes": {
                    "key": "Optional"
                  },
                  "seconds": {
                    "key": "Optional"
                  },
                  "milliseconds": {
                    "key": "Optional"
                  },
                  "microseconds": {
                    "key": "Optional"
                  }
                }
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: Request response timeout until next request attempt. Defaults to `2s`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "num_attempts": {
              "key": "Optional",
              "default": "3",
              "type": "integer",
              "docs": "**int**: Number of request attempts between 1 and 5 inclusive. Defaults to `3`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "transmitter_id": {
              "key": "Optional",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Set if you use [Remote Transmitter](https://esphome.io/components/remote_transmitter.html) component for IR commands transmit.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "beeper": {
              "key": "Optional",
              "default": "False",
              "type": "boolean",
              "docs": "**boolean**: Beeper feedback on command. Defaults to `False`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "autoconf": {
              "key": "Optional",
              "default": "True",
              "type": "boolean",
              "docs": "**boolean**: Get capabilities automatically. Allows you not to manually define most of the capabilities of the appliance. Defaults to `True`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "supported_modes": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "midea.climate.validate_modes"
                ]
              },
              "docs": "**list**: List of supported modes. Possible values are: `HEAT_COOL`, `COOL`, `HEAT`, `DRY`, `FAN_ONLY`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "supported_swing_modes": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "midea.climate.validate_swing_modes"
                ]
              },
              "docs": "**list**: List of supported swing modes. Possible values are: `VERTICAL`, `HORIZONTAL`, `BOTH`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "supported_presets": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "midea.climate.validate_presets"
                ]
              },
              "docs": "**list**: List of supported presets. Possible values are: `ECO`, `BOOST`, `SLEEP`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "custom_presets": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "midea.climate.validate_custom_presets"
                ]
              },
              "docs": "**list**: List of supported custom presets. Possible values are: `FREEZE_PROTECTION`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "custom_fan_modes": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "midea.climate.validate_custom_fan_modes"
                ]
              },
              "docs": "**list**: List of supported custom fan modes. Possible values are: `SILENT`, `TURBO`.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "outdoor_temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "\u00b0C",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:thermometer"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "temperature",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the outdoor temperature sensor.\n  * **name** (**Required**, string): The name of the sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "power_usage": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "W",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:power"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "power",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the current power consumption sensor.\n  * **name** (**Required**, string): The name of the sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "humidity_setpoint": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "%",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:water-percent"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "humidity",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the humidity indoor sensor (experimental).\n  * **name** (**Required**, string): The name of the sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            },
            "uart_id": {
              "key": "GeneratedID",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID of the [UART Bus](https://esphome.io/components/uart.html) if you want to use multiple UART buses.\n\n\n\n*See also: [Midea Air Conditioner](https://esphome.io/components/climate/midea.html#configuration-variables)*"
            }
          }
        }
      },
      "MIDEA_FOLLOW_ME_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "temperature": {
              "key": "Required",
              "templatable": true
            },
            "beeper": {
              "key": "Optional",
              "default": "False",
              "templatable": true,
              "type": "boolean"
            }
          }
        }
      }
    }
  }
}