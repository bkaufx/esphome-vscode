{
  "am43.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "config_vars": {
          "id": {
            "key": "GeneratedID"
          },
          "battery_level": {
            "key": "Optional",
            "type": "schema",
            "schema": {
              "extends": [
                "sensor.SENSOR_SCHEMA"
              ],
              "config_vars": {
                "unit_of_measurement": {
                  "default": "%"
                },
                "accuracy_decimals": {
                  "default": "0"
                },
                "device_class": {
                  "default": "battery"
                },
                "entity_category": {
                  "default": "diagnostic"
                }
              }
            },
            "docs": "The information for the battery level sensor.\n  * **name** (**Required**, string): The name for the battery level sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [AM43 Sensor](https://esphome.io/components/sensor/am43.html#configuration-variables)*"
          },
          "illuminance": {
            "key": "Optional",
            "type": "schema",
            "schema": {
              "extends": [
                "sensor.SENSOR_SCHEMA"
              ],
              "config_vars": {
                "unit_of_measurement": {
                  "default": "%"
                },
                "icon": {
                  "default": "mdi:brightness-5"
                },
                "accuracy_decimals": {
                  "default": "0"
                }
              }
            },
            "docs": "The information for the light level sensor.\n  * **name** (**Required**, string): The name for the light level sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [AM43 Sensor](https://esphome.io/components/sensor/am43.html#configuration-variables)*"
          },
          "ble_client_id": {
            "key": "Required",
            "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The id of the `ble_client` entry associated with the device.\n\n\n\n*See also: [AM43 Sensor](https://esphome.io/components/sensor/am43.html#configuration-variables)*"
          },
          "update_interval": {
            "key": "Optional",
            "default": "120s",
            "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`.\n\n\n\n*See also: [AM43 Sensor](https://esphome.io/components/sensor/am43.html#configuration-variables)*"
          }
        },
        "extends": [
          "core.COMPONENT_SCHEMA"
        ],
        "docs": "The `am43` sensor platform allows you to read the light and battery sensors on an AM43 BLE cover motor. The platform connects to the device over the ESP32\u2019s BLE peripheral.\n\n*See also: [AM43 Sensor](https://esphome.io/components/sensor/am43.html#am43-sensor)*"
      }
    }
  },
  "am43.cover": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "extends": [
          "cover.COVER_SCHEMA",
          "core.COMPONENT_SCHEMA"
        ],
        "config_vars": {
          "id": {
            "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n\n\n*See also: [AM43 Cover](https://esphome.io/components/cover/am43.html#configuration-variables)*"
          },
          "pin": {
            "key": "Optional",
            "default": "8888",
            "type": "integer",
            "docs": "**int**: The pin for the device, as set in the app. The default is usually printed on the device. Defaults to `8888`.\n\n\n\n*See also: [AM43 Cover](https://esphome.io/components/cover/am43.html#configuration-variables)*"
          },
          "invert_position": {
            "key": "Optional",
            "default": "False",
            "type": "boolean",
            "docs": "**boolean**: Inverts the position value to and from the device. Set if ESPHome is swapping around the open/close state of the cover.\n\n\n\n*See also: [AM43 Cover](https://esphome.io/components/cover/am43.html#configuration-variables)*"
          },
          "ble_client_id": {
            "key": "Required",
            "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The id of the `ble_client` entry associated with the device.\n\n\n\n*See also: [AM43 Cover](https://esphome.io/components/cover/am43.html#configuration-variables)*"
          }
        },
        "docs": "The `am43` cover platform allows you to control an AM43 based BLE cover motor. These devices are sold under various brands, such as Zemismart and A-OK. The platform connects to the device over the ESP32\u2019s BLE peripheral and both controls and fetches the position and state of the motor.\n\n*See also: [AM43 Cover](https://esphome.io/components/cover/am43.html#am43-cover)*"
      }
    }
  }
}