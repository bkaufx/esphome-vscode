{
  "canbus": {
    "components": {
      "esp32_can": {
        "docs": "The ESP32 has an integrated CAN controller and therefore doesn\u2019t need an external controller necessarily. You only need to specify the RX and TX pins.\n\n*See also: [ESP32 CAN Component](https://esphome.io/components/canbus.html#esp32-can-component)*"
      },
      "mcp2515": {
        "docs": "The MCP2515 is a spi device and therefore you must first add the configuration for the spi bus to your file. You need to have an [SPI bus](https://esphome.io/components/spi.html#spi) in your configuration with both the **mosi_pin** and **miso_pin** set.\n\n*See also: [MCP2515 Component](https://esphome.io/components/canbus.html#mcp2515-component)*"
      }
    },
    "schemas": {
      "CANBUS_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n\n\n*See also: [Base CAN Bus Configuration](https://esphome.io/components/canbus.html#configuration-variables)*"
            },
            "can_id": {
              "key": "Required",
              "type": "integer",
              "docs": "**int**: default *can id* used for transmitting frames.\n\n\n\n*See also: [Base CAN Bus Configuration](https://esphome.io/components/canbus.html#configuration-variables)*"
            },
            "bit_rate": {
              "key": "Optional",
              "default": "125KBPS",
              "type": "enum",
              "values": [
                "5KBPS",
                "10KBPS",
                "20KBPS",
                "31K25BPS",
                "33KBPS",
                "40KBPS",
                "50KBPS",
                "80KBPS",
                "83K3BPS",
                "95KBPS",
                "100KBPS",
                "125KBPS",
                "200KBPS",
                "250KBPS",
                "500KBPS",
                "1000KBPS"
              ],
              "docs": "**enum**: One of the supported bitrates. Defaults to `125KBPS`. Bitrates marked with * are not supported by the internal ESP32 CAN controller.\n  * 5KBPS *\n  \n  * 10KBPS *\n  \n  * 20KBPS *\n  \n  * 31K25BPS *\n  \n  * 33KBPS *\n  \n  * 40KBPS *\n  \n  * 50KBPS\n  \n  * 80KBPS *\n  \n  * 83K3BPS *\n  \n  * 95KBPS *\n  \n  * 100KBPS\n  \n  * 125KBPS\n  \n  * 200KBPS *\n  \n  * 250KBPS\n  \n  * 500KBPS\n  \n  * 1000KBPS\n  \n  \n\n\n\n*See also: [Base CAN Bus Configuration](https://esphome.io/components/canbus.html#configuration-variables)*"
            },
            "use_extended_id": {
              "key": "Optional",
              "default": "False",
              "type": "boolean",
              "docs": "**boolean**: default *false* identifies the type of *can_id*: *false*: Standard 11 bits IDs, *true*: Extended 29 bits ID\n\n\n\n*See also: [Base CAN Bus Configuration](https://esphome.io/components/canbus.html#configuration-variables)*"
            },
            "on_frame": {
              "key": "Optional",
              "type": "trigger",
              "schema": {
                "config_vars": {
                  "can_id": {
                    "key": "Required",
                    "type": "integer"
                  },
                  "can_id_mask": {
                    "key": "Optional",
                    "default": "536870911",
                    "type": "integer"
                  },
                  "use_extended_id": {
                    "key": "Optional",
                    "default": "False",
                    "type": "boolean"
                  },
                  "then": {
                    "type": "trigger"
                  }
                }
              },
              "has_required_var": true
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      }
    },
    "action": {
      "send": {
        "is_list": true,
        "type": "schema",
        "schema": {
          "config_vars": {
            "canbus_id": {
              "key": "GeneratedID",
              "docs": "Optionally set the can bus id to use for transmitting the frame. Not needed if you are using only 1 can bus.\n\n\n\n*See also: [Base CAN Bus Configuration](https://esphome.io/components/canbus.html#canbus-send-action)*"
            },
            "can_id": {
              "key": "Optional",
              "type": "integer",
              "docs": "**int**: Allows to override the can id configured in the can bus device.\n\n\n\n*See also: [Base CAN Bus Configuration](https://esphome.io/components/canbus.html#canbus-send-action)*"
            },
            "use_extended_id": {
              "key": "Optional",
              "default": "False",
              "type": "boolean",
              "docs": "**boolean**: default *false* identifies the type of *can_id*: *false*: Standard 11 Bit IDs, *true*: Extended 29Bit ID\n\n\n\n*See also: [Base CAN Bus Configuration](https://esphome.io/components/canbus.html#canbus-send-action)*"
            },
            "data": {
              "key": "Required",
              "templatable": true,
              "docs": "**binary data**: Data to transmit, up to 8 bytes or characters are supported by can bus per frame.\n\n\n\n*See also: [Base CAN Bus Configuration](https://esphome.io/components/canbus.html#canbus-send-action)*"
            }
          }
        },
        "docs": "The can bus can transmit frames by means of the `canbus.send` action. There are several forms to use it:\n\n*See also: [Base CAN Bus Configuration](https://esphome.io/components/canbus.html#canbus-send-action)*"
      }
    }
  }
}