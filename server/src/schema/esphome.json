{
  "esphome": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "name": {
              "key": "Required",
              "type": "string"
            },
            "comment": {
              "key": "Optional",
              "type": "string"
            },
            "build_path": {
              "key": "Required",
              "type": "string"
            },
            "platformio_options": {
              "key": "String",
              "default": "{}",
              "key_dump": "<function string_strict at 0x0000020B3BE40700>",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "<function string_strict at 0x0000020B3BE40700>": {
                    "type": "string"
                  }
                }
              }
            },
            "on_boot": {
              "key": "Optional",
              "type": "trigger",
              "schema": {
                "config_vars": {
                  "priority": {
                    "key": "Optional",
                    "default": "600.0"
                  },
                  "then": {
                    "type": "trigger"
                  }
                }
              }
            },
            "on_shutdown": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_loop": {
              "key": "Optional",
              "type": "trigger"
            },
            "includes": {
              "key": "Optional",
              "default": "[]",
              "is_list": true
            },
            "libraries": {
              "key": "Optional",
              "default": "[]",
              "is_list": true,
              "type": "string"
            },
            "name_add_mac_suffix": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "project": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "name": {
                    "key": "Required",
                    "type": "string"
                  },
                  "version": {
                    "key": "Required",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "PRELOAD_CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "name": {
              "key": "Required",
              "type": "string"
            },
            "build_path": {
              "key": "Optional",
              "type": "string"
            },
            "platform": {
              "key": "Optional",
              "type": "enum",
              "values": [
                "esp32",
                "esp8266"
              ]
            },
            "board": {
              "key": "Optional",
              "type": "string"
            },
            "esp8266_restore_from_flash": {
              "key": "Optional"
            },
            "board_flash_mode": {
              "key": "Optional"
            },
            "arduino_version": {
              "key": "Optional"
            }
          }
        }
      }
    }
  },
  "core": {
    "schemas": {
      "port": {
        "type": "integer"
      },
      "uint8_t": {
        "type": "integer"
      },
      "uint16_t": {
        "type": "integer"
      },
      "uint32_t": {
        "type": "integer"
      },
      "uint64_t": {
        "type": "integer"
      },
      "positive_float": {},
      "zero_to_one_float": {},
      "negative_one_to_one_float": {},
      "positive_int": {
        "type": "integer"
      },
      "positive_not_null_int": {
        "type": "integer"
      },
      "time_period_dict": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "days": {
              "key": "Optional"
            },
            "hours": {
              "key": "Optional"
            },
            "minutes": {
              "key": "Optional"
            },
            "seconds": {
              "key": "Optional"
            },
            "milliseconds": {
              "key": "Optional"
            },
            "microseconds": {
              "key": "Optional"
            }
          }
        }
      },
      "positive_time_period_milliseconds": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.time_period_dict"
          ]
        }
      },
      "positive_time_period_seconds": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.time_period_dict"
          ]
        }
      },
      "positive_time_period_minutes": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.time_period_dict"
          ]
        }
      },
      "time_period_microseconds": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.time_period_dict"
          ]
        }
      },
      "positive_time_period_microseconds": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.time_period_dict"
          ]
        }
      },
      "positive_not_null_time_period": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.time_period_dict"
          ]
        }
      },
      "hex_uint8_t": {},
      "hex_uint16_t": {},
      "hex_uint32_t": {},
      "hex_uint64_t": {},
      "i2c_address": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.hex_uint8_t"
          ]
        }
      },
      "MQTT_COMPONENT_AVAILABILITY_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "topic": {
              "key": "Required"
            },
            "payload_available": {
              "key": "Optional",
              "default": "online"
            },
            "payload_not_available": {
              "key": "Optional",
              "default": "offline"
            }
          }
        }
      },
      "MQTT_COMPONENT_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "retain": {
              "key": "Optional",
              "type": "boolean"
            },
            "discovery": {
              "key": "Optional",
              "type": "boolean"
            },
            "state_topic": {
              "key": "Optional"
            },
            "availability": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "topic": {
                    "key": "Required"
                  },
                  "payload_available": {
                    "key": "Optional",
                    "default": "online"
                  },
                  "payload_not_available": {
                    "key": "Optional",
                    "default": "offline"
                  }
                }
              }
            }
          }
        }
      },
      "COMPONENT_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "setup_priority": {
              "key": "Optional"
            }
          }
        }
      },
      "MQTT_COMMAND_COMPONENT_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.MQTT_COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "command_topic": {
              "key": "Optional"
            },
            "command_retain": {
              "key": "Optional",
              "type": "boolean"
            }
          }
        }
      },
      "ENTITY_BASE_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "name": {
              "key": "Optional",
              "type": "string"
            },
            "internal": {
              "key": "Optional",
              "type": "boolean"
            },
            "disabled_by_default": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "icon": {
              "key": "Optional"
            },
            "entity_category": {
              "key": "Optional"
            }
          }
        }
      }
    },
    "platforms": {
      "binary_sensor": {},
      "sensor": {}
    },
    "components": {
      "esphome": {},
      "esp32": {},
      "esp8266": {},
      "remote_receiver": {}
    },
    "action": {
      "delay": {
        "templatable": true,
        "type": "schema",
        "schema": {
          "extends": [
            "core.positive_time_period_milliseconds"
          ]
        }
      },
      "if": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "condition": {
              "key": "Required",
              "type": "registry",
              "registry": "condition"
            },
            "then": {
              "key": "Optional",
              "is_list": true,
              "type": "registry",
              "registry": "action"
            },
            "else": {
              "key": "Optional",
              "is_list": true,
              "type": "registry",
              "registry": "action"
            }
          }
        }
      },
      "while": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "condition": {
              "key": "Required",
              "type": "registry",
              "registry": "condition"
            },
            "then": {
              "key": "Required",
              "is_list": true,
              "type": "registry",
              "registry": "action"
            }
          }
        }
      },
      "repeat": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "count": {
              "key": "Required",
              "templatable": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_not_null_int"
                ]
              }
            },
            "then": {
              "key": "Required",
              "is_list": true,
              "type": "registry",
              "registry": "action"
            }
          }
        }
      },
      "wait_until": {
        "is_list": true,
        "type": "schema",
        "schema": {
          "config_vars": {
            "condition": {
              "key": "Required",
              "type": "registry",
              "registry": "condition"
            },
            "timeout": {
              "key": "Optional",
              "templatable": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              }
            }
          }
        }
      },
      "lambda": {}
    },
    "condition": {
      "and": {
        "is_list": true,
        "type": "registry",
        "registry": "condition"
      },
      "or": {
        "is_list": true,
        "type": "registry",
        "registry": "condition"
      },
      "not": {
        "type": "registry",
        "registry": "condition"
      },
      "lambda": {},
      "for": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "time": {
              "key": "Required",
              "templatable": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_milliseconds"
                ]
              }
            },
            "condition": {
              "key": "Required",
              "type": "registry",
              "registry": "condition"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      }
    },
    "pins": [
      "esp32",
      "esp8266"
    ]
  }
}