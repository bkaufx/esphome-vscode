{
  "bme680_bsec": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID"
            },
            "temperature_offset": {
              "key": "Optional",
              "default": "0",
              "docs": "**float**: Temperature offset if device is in enclosure and reads too high. Defaults to `0`.\n\n\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*"
            },
            "iaq_mode": {
              "key": "Optional",
              "default": "STATIC",
              "type": "enum",
              "values": [
                "STATIC",
                "MOBILE"
              ],
              "docs": "**string**: IAQ calculation mode. Default is `static` for static applications (e.g. fixed indoor devices). Can be `mobile` for mobile applications (e.g. carry-on devices).\n\n\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*"
            },
            "sample_rate": {
              "key": "Optional",
              "default": "LP",
              "type": "enum",
              "values": [
                "LP",
                "ULP"
              ],
              "docs": "**string**: Sample rate. Default is `lp` for low power consumption, sampling every 3 seconds. Can be `ulp` for ultra low power, sampling every 5 minutes. This controls the sampling rate for gas-dependant sensors and will govern the interval at which the sensor heater is operated. By default this rate will also be used for temperature, pressure and humidity sensors but these can be overridden on a per-sensor level if required.\n\n\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*"
            },
            "state_save_interval": {
              "key": "Optional",
              "default": "6hours",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.time_period_dict"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The minimum interval at which to save calibrated BSEC algorithm state to flash so that calibration doesn\u2019t have to start from zero on device restart. Defaults to `6h`.\n\n\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*"
            },
            "i2c_id": {
              "key": "GeneratedID"
            },
            "address": {
              "key": "Optional",
              "default": "118",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.hex_uint8_t"
                ]
              },
              "docs": "**int**: Manually specify the I^2C address of the sensor. Defaults to `0x76`. Another address can be `0x77`.\n\n\n\n*See also: [bme680_bsec Component/Hub](https://esphome.io/components/sensor/bme680_bsec.html#component-hub)*"
            }
          }
        }
      }
    }
  },
  "bme680_bsec.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "bme680_bsec_id": {
              "key": "GeneratedID"
            },
            "temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "\u00b0C",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:thermometer"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "1",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "temperature",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  },
                  "sample_rate": {
                    "key": "Optional",
                    "type": "enum",
                    "values": [
                      "LP",
                      "ULP"
                    ],
                    "docs": "**string**: Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra low power, sampling every 5 minutes.\n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
                  }
                }
              },
              "docs": "The information for the temperature sensor.\n  * **name** (**Required**, string): The name for the temperature sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * **sample_rate** (*Optional*, string): Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra low power, sampling every 5 minutes.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
            },
            "pressure": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "hPa",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:gauge"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "1",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "pressure",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  },
                  "sample_rate": {
                    "key": "Optional",
                    "type": "enum",
                    "values": [
                      "LP",
                      "ULP"
                    ],
                    "docs": "**string**: Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra low power, sampling every 5 minutes.\n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
                  }
                }
              },
              "docs": "The information for the pressure sensor.\n  * **name** (**Required**, string): The name for the pressure sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * **sample_rate** (*Optional*, string): Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra low power, sampling every 5 minutes.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
            },
            "humidity": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "%",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:water-percent"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "1",
                    "type": "integer"
                  },
                  "device_class": {
                    "key": "Optional",
                    "default": "humidity",
                    "type": "enum",
                    "values": [
                      "",
                      "aqi",
                      "battery",
                      "carbon_dioxide",
                      "carbon_monoxide",
                      "current",
                      "energy",
                      "gas",
                      "humidity",
                      "illuminance",
                      "monetary",
                      "nitrogen_dioxide",
                      "nitrogen_monoxide",
                      "nitrous_oxide",
                      "ozone",
                      "pm1",
                      "pm10",
                      "pm25",
                      "power",
                      "power_factor",
                      "pressure",
                      "signal_strength",
                      "sulphur_dioxide",
                      "temperature",
                      "timestamp",
                      "volatile_organic_compounds",
                      "voltage"
                    ]
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  },
                  "sample_rate": {
                    "key": "Optional",
                    "type": "enum",
                    "values": [
                      "LP",
                      "ULP"
                    ],
                    "docs": "**string**: Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra low power, sampling every 5 minutes.\n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
                  }
                }
              },
              "docs": "The information for the humidity sensor.\n  * **name** (**Required**, string): The name for the humidity sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * **sample_rate** (*Optional*, string): Optional sample rate override for this sensor. Can be `lp` for low power consumption, sampling every 3 seconds or `ulp` for ultra low power, sampling every 5 minutes.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
            },
            "gas_resistance": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "\u03a9",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:gas-cylinder"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the gas sensor.\n  * **name** (**Required**, string): The name for the gas resistance sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
            },
            "iaq": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "IAQ",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:gauge"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the IAQ sensor.\n  * **name** (**Required**, string): The name for the IAQ sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
            },
            "iaq_accuracy": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:checkbox-marked-circle-outline"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer"
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the numeric IAQ accuracy sensor.\n  * **name** (**Required**, string): The name for the IAQ accuracy sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
            },
            "co2_equivalent": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "ppm",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:test-tube"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "1",
                    "type": "integer"
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the CO2 equivalent sensor.\n  * **name** (**Required**, string): The name for the CO2 equivalent sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
            },
            "breath_voc_equivalent": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "key": "Optional",
                    "default": "ppm",
                    "type": "string"
                  },
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:test-tube"
                  },
                  "accuracy_decimals": {
                    "key": "Optional",
                    "default": "1",
                    "type": "integer"
                  },
                  "state_class": {
                    "key": "Optional",
                    "default": "measurement",
                    "type": "enum",
                    "values": [
                      "",
                      "measurement",
                      "total_increasing"
                    ]
                  }
                }
              },
              "docs": "The information for the Breath VOC equivalent humidity sensor.\n  * **name** (**Required**, string): The name for the Breath VOC equivalent sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n\n\n*See also: [bme680_bsec Sensor](https://esphome.io/components/sensor/bme680_bsec.html#sensor)*"
            }
          }
        }
      }
    }
  },
  "bme680_bsec.text_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "bme680_bsec_id": {
              "key": "GeneratedID"
            },
            "iaq_accuracy": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "text_sensor.TEXT_SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "icon": {
                    "key": "Optional",
                    "default": "mdi:checkbox-marked-circle-outline"
                  }
                }
              },
              "docs": "The information for the IAQ accuracy sensor. Shows: Stabilizing, Uncertain, Calibrating, Calibrated.\n  * **name** (**Required**, string): The name for the IAQ accuracy sensor.\n  \n  * **id** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Set the ID of this sensor for use in lambdas.\n  \n  * All other options from [TextSensor](https://esphome.io/components/text_sensor/index.html#config-text-sensor).\n  \n  \n\n\n\n*See also: [bme680_bsec Text Sensor](https://esphome.io/components/sensor/bme680_bsec.html#text-sensor)*"
            }
          }
        }
      }
    }
  }
}